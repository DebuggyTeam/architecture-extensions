import java.nio.charset.StandardCharsets

plugins {
	id 'maven-publish'
	alias(libs.plugins.quilt.loom)
	alias(libs.plugins.minotaur)
}

archivesBaseName = project.archives_base_name
version = project.version
group = project.maven_group

repositories {
	exclusiveContent {
		forRepository {
			maven {
				name = "Modrinth"
				url = "https://api.modrinth.com/maven"
			}
		}
		filter {
			includeGroup "maven.modrinth"
		}
	}
}

dependencies {
	minecraft libs.minecraft
	mappings "org.quiltmc:quilt-mappings:${libs.versions.quilt.mappings.get()}:intermediary-v2"
	modImplementation libs.quilt.loader

	modImplementation libs.quilted.fabric.api

	modImplementation include("maven.modrinth:static-data:1.0.1+1.20")
	modImplementation include("maven.modrinth:suspicious-shapes:1.0.0+1.20.1")
}

processResources {
	inputs.property "version", version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}" }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {

	}
}

modrinth {
	token = System.getenv("MODRINTH_TOKEN")
	projectId = "arch-ex"
	uploadFile = remapJar
	additionalFiles = [sourcesJar]
	gameVersions = [libs.versions.minecraft.get()]
	loaders = ["quilt"]
	def ref = System.getenv("GITHUB_REF")
	changelog = System.getenv("CHANGELOG") ?:
			(ref != null && ref.startsWith("refs/tags/")) ?
					"You may view the changelog at https://github.com/woodiertexas/architecture-extensions/releases/tag/${URLEncoder.encode(ref.substring(10), StandardCharsets.UTF_8)}" :
					"No changelog is available. Perhaps poke at https://github.com/woodiertexas/architecture-extensions for a changelog?"

	dependencies {
		required.project "qsl"
	}
}
